                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.2.1 Tue Jan 07 13:49:21 2020
                              4 
                              5 ;--------------------------------------------------------
                              6 	.module lcc80120
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _printf
                             13 	.globl _scroll_sprite
                             14 	.globl _move_sprite
                             15 	.globl _set_sprite_tile
                             16 	.globl _set_sprite_data
                             17 	.globl _delay
                             18 	.globl _skull
                             19 	.globl _main
                             20 ;--------------------------------------------------------
                             21 ; Externals used
                             22 ;--------------------------------------------------------
                             23 	.globl _IE_REG
                             24 	.globl _SVBK_REG
                             25 	.globl _OCPD_REG
                             26 	.globl _OCPS_REG
                             27 	.globl _BCPD_REG
                             28 	.globl _BCPS_REG
                             29 	.globl _RP_REG
                             30 	.globl _HDMA5_REG
                             31 	.globl _HDMA4_REG
                             32 	.globl _HDMA3_REG
                             33 	.globl _HDMA2_REG
                             34 	.globl _HDMA1_REG
                             35 	.globl _VBK_REG
                             36 	.globl _KEY1_REG
                             37 	.globl _WX_REG
                             38 	.globl _WY_REG
                             39 	.globl _OBP1_REG
                             40 	.globl _OBP0_REG
                             41 	.globl _BGP_REG
                             42 	.globl _DMA_REG
                             43 	.globl _LYC_REG
                             44 	.globl _LY_REG
                             45 	.globl _SCX_REG
                             46 	.globl _SCY_REG
                             47 	.globl _STAT_REG
                             48 	.globl _LCDC_REG
                             49 	.globl _NR52_REG
                             50 	.globl _NR51_REG
                             51 	.globl _NR50_REG
                             52 	.globl _NR44_REG
                             53 	.globl _NR43_REG
                             54 	.globl _NR42_REG
                             55 	.globl _NR41_REG
                             56 	.globl _NR34_REG
                             57 	.globl _NR33_REG
                             58 	.globl _NR32_REG
                             59 	.globl _NR31_REG
                             60 	.globl _NR30_REG
                             61 	.globl _NR24_REG
                             62 	.globl _NR23_REG
                             63 	.globl _NR22_REG
                             64 	.globl _NR21_REG
                             65 	.globl _NR14_REG
                             66 	.globl _NR13_REG
                             67 	.globl _NR12_REG
                             68 	.globl _NR11_REG
                             69 	.globl _NR10_REG
                             70 	.globl _IF_REG
                             71 	.globl _TAC_REG
                             72 	.globl _TMA_REG
                             73 	.globl _TIMA_REG
                             74 	.globl _DIV_REG
                             75 	.globl _SC_REG
                             76 	.globl _SB_REG
                             77 	.globl _P1_REG
                             78 	.globl __io_out
                             79 	.globl __io_in
                             80 	.globl __io_status
                             81 	.globl _sys_time
                             82 	.globl __cpu
                             83 ;--------------------------------------------------------
                             84 ; special function registers
                             85 ;--------------------------------------------------------
                             86 ;--------------------------------------------------------
                             87 ; special function bits 
                             88 ;--------------------------------------------------------
                             89 ;--------------------------------------------------------
                             90 ; internal ram data
                             91 ;--------------------------------------------------------
                             92 	.area _DATA
   0000                      93 _skull::
   0000                      94 	.ds 64
                             95 ;--------------------------------------------------------
                             96 ; overlayable items in internal ram 
                             97 ;--------------------------------------------------------
                             98 	.area _OVERLAY
                             99 ;--------------------------------------------------------
                            100 ; indirectly addressable internal ram data
                            101 ;--------------------------------------------------------
                            102 	.area _ISEG
                            103 ;--------------------------------------------------------
                            104 ; bit data
                            105 ;--------------------------------------------------------
                            106 	.area _BSEG
                            107 ;--------------------------------------------------------
                            108 ; external ram data
                            109 ;--------------------------------------------------------
                            110 	.area _XSEG
                            111 ;--------------------------------------------------------
                            112 ; global & static initialisations
                            113 ;--------------------------------------------------------
                            114 	.area _GSINIT
                            115 	.area _GSFINAL
                            116 	.area _GSINIT
                            117 ;	main.c 47
                            118 ; genAssign (pointer)
   0000 11 00 00            119 	ld	de,#_skull + 0
   0003 3E 34               120 	ld	a,#0x34
   0005 12                  121 	ld	(de),a
                            122 ; genPlus
                            123 ; genPlusIncr
   0006 11 01 00            124 	ld	de,#_skull + 0 + 1
                            125 ; genAssign (pointer)
   0009 3E 08               126 	ld	a,#0x08
   000B 12                  127 	ld	(de),a
                            128 ; genPlus
                            129 ; genPlusIncr
   000C 11 02 00            130 	ld	de,#_skull + 0 + 2
                            131 ; genAssign (pointer)
   000F 3E 42               132 	ld	a,#0x42
   0011 12                  133 	ld	(de),a
                            134 ; genPlus
                            135 ; genPlusIncr
   0012 11 03 00            136 	ld	de,#_skull + 0 + 3
                            137 ; genAssign (pointer)
   0015 3E 00               138 	ld	a,#0x00
   0017 12                  139 	ld	(de),a
                            140 ; genPlus
                            141 ; genPlusIncr
   0018 11 04 00            142 	ld	de,#_skull + 0 + 4
                            143 ; genAssign (pointer)
   001B 3E 94               144 	ld	a,#0x94
   001D 12                  145 	ld	(de),a
                            146 ; genPlus
                            147 ; genPlusIncr
   001E 11 05 00            148 	ld	de,#_skull + 0 + 5
                            149 ; genAssign (pointer)
   0021 3E 15               150 	ld	a,#0x15
   0023 12                  151 	ld	(de),a
                            152 ; genPlus
                            153 ; genPlusIncr
   0024 11 06 00            154 	ld	de,#_skull + 0 + 6
                            155 ; genAssign (pointer)
   0027 3E 95               156 	ld	a,#0x95
   0029 12                  157 	ld	(de),a
                            158 ; genPlus
                            159 ; genPlusIncr
   002A 11 07 00            160 	ld	de,#_skull + 0 + 7
                            161 ; genAssign (pointer)
   002D 3E 14               162 	ld	a,#0x14
   002F 12                  163 	ld	(de),a
                            164 ; genPlus
                            165 ; genPlusIncr
   0030 11 08 00            166 	ld	de,#_skull + 0 + 8
                            167 ; genAssign (pointer)
   0033 3E 15               168 	ld	a,#0x15
   0035 12                  169 	ld	(de),a
                            170 ; genPlus
                            171 ; genPlusIncr
   0036 11 09 00            172 	ld	de,#_skull + 0 + 9
                            173 ; genAssign (pointer)
   0039 3E 94               174 	ld	a,#0x94
   003B 12                  175 	ld	(de),a
                            176 ; genPlus
                            177 ; genPlusIncr
   003C 11 0A 00            178 	ld	de,#_skull + 0 + 10
                            179 ; genAssign (pointer)
   003F 3E 81               180 	ld	a,#0x81
   0041 12                  181 	ld	(de),a
                            182 ; genPlus
                            183 ; genPlusIncr
   0042 11 0B 00            184 	ld	de,#_skull + 0 + 11
                            185 ; genAssign (pointer)
   0045 3E 40               186 	ld	a,#0x40
   0047 12                  187 	ld	(de),a
                            188 ; genPlus
                            189 ; genPlusIncr
   0048 11 0C 00            190 	ld	de,#_skull + 0 + 12
                            191 ; genAssign (pointer)
   004B 3E 6A               192 	ld	a,#0x6A
   004D 12                  193 	ld	(de),a
                            194 ; genPlus
                            195 ; genPlusIncr
   004E 11 0D 00            196 	ld	de,#_skull + 0 + 13
                            197 ; genAssign (pointer)
   0051 3E 2A               198 	ld	a,#0x2A
   0053 12                  199 	ld	(de),a
                            200 ; genPlus
                            201 ; genPlusIncr
   0054 11 0E 00            202 	ld	de,#_skull + 0 + 14
                            203 ; genAssign (pointer)
   0057 3E 3E               204 	ld	a,#0x3E
   0059 12                  205 	ld	(de),a
                            206 ; genPlus
                            207 ; genPlusIncr
   005A 11 0F 00            208 	ld	de,#_skull + 0 + 15
                            209 ; genAssign (pointer)
   005D 3E 2A               210 	ld	a,#0x2A
   005F 12                  211 	ld	(de),a
                            212 ; genPlus
                            213 ; genPlusIncr
   0060 11 10 00            214 	ld	de,#_skull + 0 + 16
                            215 ; genAssign (pointer)
   0063 3E 2C               216 	ld	a,#0x2C
   0065 12                  217 	ld	(de),a
                            218 ; genPlus
                            219 ; genPlusIncr
   0066 11 11 00            220 	ld	de,#_skull + 0 + 17
                            221 ; genAssign (pointer)
   0069 3E 10               222 	ld	a,#0x10
   006B 12                  223 	ld	(de),a
                            224 ; genPlus
                            225 ; genPlusIncr
   006C 11 12 00            226 	ld	de,#_skull + 0 + 18
                            227 ; genAssign (pointer)
   006F 3E 42               228 	ld	a,#0x42
   0071 12                  229 	ld	(de),a
                            230 ; genPlus
                            231 ; genPlusIncr
   0072 11 13 00            232 	ld	de,#_skull + 0 + 19
                            233 ; genAssign (pointer)
   0075 3E 00               234 	ld	a,#0x00
   0077 12                  235 	ld	(de),a
                            236 ; genPlus
                            237 ; genPlusIncr
   0078 11 14 00            238 	ld	de,#_skull + 0 + 20
                            239 ; genAssign (pointer)
   007B 3E 29               240 	ld	a,#0x29
   007D 12                  241 	ld	(de),a
                            242 ; genPlus
                            243 ; genPlusIncr
   007E 11 15 00            244 	ld	de,#_skull + 0 + 21
                            245 ; genAssign (pointer)
   0081 3E A8               246 	ld	a,#0xA8
   0083 12                  247 	ld	(de),a
                            248 ; genPlus
                            249 ; genPlusIncr
   0084 11 16 00            250 	ld	de,#_skull + 0 + 22
                            251 ; genAssign (pointer)
   0087 3E A9               252 	ld	a,#0xA9
   0089 12                  253 	ld	(de),a
                            254 ; genPlus
                            255 ; genPlusIncr
   008A 11 17 00            256 	ld	de,#_skull + 0 + 23
                            257 ; genAssign (pointer)
   008D 3E 28               258 	ld	a,#0x28
   008F 12                  259 	ld	(de),a
                            260 ; genPlus
                            261 ; genPlusIncr
   0090 11 18 00            262 	ld	de,#_skull + 0 + 24
                            263 ; genAssign (pointer)
   0093 3E A8               264 	ld	a,#0xA8
   0095 12                  265 	ld	(de),a
                            266 ; genPlus
                            267 ; genPlusIncr
   0096 11 19 00            268 	ld	de,#_skull + 0 + 25
                            269 ; genAssign (pointer)
   0099 3E 29               270 	ld	a,#0x29
   009B 12                  271 	ld	(de),a
                            272 ; genPlus
                            273 ; genPlusIncr
   009C 11 1A 00            274 	ld	de,#_skull + 0 + 26
                            275 ; genAssign (pointer)
   009F 3E 81               276 	ld	a,#0x81
   00A1 12                  277 	ld	(de),a
                            278 ; genPlus
                            279 ; genPlusIncr
   00A2 11 1B 00            280 	ld	de,#_skull + 0 + 27
                            281 ; genAssign (pointer)
   00A5 3E 02               282 	ld	a,#0x02
   00A7 12                  283 	ld	(de),a
                            284 ; genPlus
                            285 ; genPlusIncr
   00A8 11 1C 00            286 	ld	de,#_skull + 0 + 28
                            287 ; genAssign (pointer)
   00AB 3E 56               288 	ld	a,#0x56
   00AD 12                  289 	ld	(de),a
                            290 ; genPlus
                            291 ; genPlusIncr
   00AE 11 1D 00            292 	ld	de,#_skull + 0 + 29
                            293 ; genAssign (pointer)
   00B1 3E 54               294 	ld	a,#0x54
   00B3 12                  295 	ld	(de),a
                            296 ; genPlus
                            297 ; genPlusIncr
   00B4 11 1E 00            298 	ld	de,#_skull + 0 + 30
                            299 ; genAssign (pointer)
   00B7 3E 7C               300 	ld	a,#0x7C
   00B9 12                  301 	ld	(de),a
                            302 ; genPlus
                            303 ; genPlusIncr
   00BA 11 1F 00            304 	ld	de,#_skull + 0 + 31
                            305 ; genAssign (pointer)
   00BD 3E 54               306 	ld	a,#0x54
   00BF 12                  307 	ld	(de),a
                            308 ; genPlus
                            309 ; genPlusIncr
   00C0 11 20 00            310 	ld	de,#_skull + 0 + 32
                            311 ; genAssign (pointer)
   00C3 3E 38               312 	ld	a,#0x38
   00C5 12                  313 	ld	(de),a
                            314 ; genPlus
                            315 ; genPlusIncr
   00C6 11 21 00            316 	ld	de,#_skull + 0 + 33
                            317 ; genAssign (pointer)
   00C9 3E 00               318 	ld	a,#0x00
   00CB 12                  319 	ld	(de),a
                            320 ; genPlus
                            321 ; genPlusIncr
   00CC 11 22 00            322 	ld	de,#_skull + 0 + 34
                            323 ; genAssign (pointer)
   00CF 3E 44               324 	ld	a,#0x44
   00D1 12                  325 	ld	(de),a
                            326 ; genPlus
                            327 ; genPlusIncr
   00D2 11 23 00            328 	ld	de,#_skull + 0 + 35
                            329 ; genAssign (pointer)
   00D5 3E 00               330 	ld	a,#0x00
   00D7 12                  331 	ld	(de),a
                            332 ; genPlus
                            333 ; genPlusIncr
   00D8 11 24 00            334 	ld	de,#_skull + 0 + 36
                            335 ; genAssign (pointer)
   00DB 3E 2A               336 	ld	a,#0x2A
   00DD 12                  337 	ld	(de),a
                            338 ; genPlus
                            339 ; genPlusIncr
   00DE 11 25 00            340 	ld	de,#_skull + 0 + 37
                            341 ; genAssign (pointer)
   00E1 3E A8               342 	ld	a,#0xA8
   00E3 12                  343 	ld	(de),a
                            344 ; genPlus
                            345 ; genPlusIncr
   00E4 11 26 00            346 	ld	de,#_skull + 0 + 38
                            347 ; genAssign (pointer)
   00E7 3E AA               348 	ld	a,#0xAA
   00E9 12                  349 	ld	(de),a
                            350 ; genPlus
                            351 ; genPlusIncr
   00EA 11 27 00            352 	ld	de,#_skull + 0 + 39
                            353 ; genAssign (pointer)
   00ED 3E 28               354 	ld	a,#0x28
   00EF 12                  355 	ld	(de),a
                            356 ; genPlus
                            357 ; genPlusIncr
   00F0 11 28 00            358 	ld	de,#_skull + 0 + 40
                            359 ; genAssign (pointer)
   00F3 3E AA               360 	ld	a,#0xAA
   00F5 12                  361 	ld	(de),a
                            362 ; genPlus
                            363 ; genPlusIncr
   00F6 11 29 00            364 	ld	de,#_skull + 0 + 41
                            365 ; genAssign (pointer)
   00F9 3E 28               366 	ld	a,#0x28
   00FB 12                  367 	ld	(de),a
                            368 ; genPlus
                            369 ; genPlusIncr
   00FC 11 2A 00            370 	ld	de,#_skull + 0 + 42
                            371 ; genAssign (pointer)
   00FF 3E 80               372 	ld	a,#0x80
   0101 12                  373 	ld	(de),a
                            374 ; genPlus
                            375 ; genPlusIncr
   0102 11 2B 00            376 	ld	de,#_skull + 0 + 43
                            377 ; genAssign (pointer)
   0105 3E 02               378 	ld	a,#0x02
   0107 12                  379 	ld	(de),a
                            380 ; genPlus
                            381 ; genPlusIncr
   0108 11 2C 00            382 	ld	de,#_skull + 0 + 44
                            383 ; genAssign (pointer)
   010B 3E 54               384 	ld	a,#0x54
   010D 12                  385 	ld	(de),a
                            386 ; genPlus
                            387 ; genPlusIncr
   010E 11 2D 00            388 	ld	de,#_skull + 0 + 45
                            389 ; genAssign (pointer)
   0111 3E 54               390 	ld	a,#0x54
   0113 12                  391 	ld	(de),a
                            392 ; genPlus
                            393 ; genPlusIncr
   0114 11 2E 00            394 	ld	de,#_skull + 0 + 46
                            395 ; genAssign (pointer)
   0117 3E 7C               396 	ld	a,#0x7C
   0119 12                  397 	ld	(de),a
                            398 ; genPlus
                            399 ; genPlusIncr
   011A 11 2F 00            400 	ld	de,#_skull + 0 + 47
                            401 ; genAssign (pointer)
   011D 3E 54               402 	ld	a,#0x54
   011F 12                  403 	ld	(de),a
                            404 ; genPlus
                            405 ; genPlusIncr
   0120 11 30 00            406 	ld	de,#_skull + 0 + 48
                            407 ; genAssign (pointer)
   0123 3E 7C               408 	ld	a,#0x7C
   0125 12                  409 	ld	(de),a
                            410 ; genPlus
                            411 ; genPlusIncr
   0126 11 31 00            412 	ld	de,#_skull + 0 + 49
                            413 ; genAssign (pointer)
   0129 3E 54               414 	ld	a,#0x54
   012B 12                  415 	ld	(de),a
                            416 ; genPlus
                            417 ; genPlusIncr
   012C 11 32 00            418 	ld	de,#_skull + 0 + 50
                            419 ; genAssign (pointer)
   012F 3E 54               420 	ld	a,#0x54
   0131 12                  421 	ld	(de),a
                            422 ; genPlus
                            423 ; genPlusIncr
   0132 11 33 00            424 	ld	de,#_skull + 0 + 51
                            425 ; genAssign (pointer)
   0135 3E 54               426 	ld	a,#0x54
   0137 12                  427 	ld	(de),a
                            428 ; genPlus
                            429 ; genPlusIncr
   0138 11 34 00            430 	ld	de,#_skull + 0 + 52
                            431 ; genAssign (pointer)
   013B 3E 80               432 	ld	a,#0x80
   013D 12                  433 	ld	(de),a
                            434 ; genPlus
                            435 ; genPlusIncr
   013E 11 35 00            436 	ld	de,#_skull + 0 + 53
                            437 ; genAssign (pointer)
   0141 3E 02               438 	ld	a,#0x02
   0143 12                  439 	ld	(de),a
                            440 ; genPlus
                            441 ; genPlusIncr
   0144 11 36 00            442 	ld	de,#_skull + 0 + 54
                            443 ; genAssign (pointer)
   0147 3E AA               444 	ld	a,#0xAA
   0149 12                  445 	ld	(de),a
                            446 ; genPlus
                            447 ; genPlusIncr
   014A 11 37 00            448 	ld	de,#_skull + 0 + 55
                            449 ; genAssign (pointer)
   014D 3E 28               450 	ld	a,#0x28
   014F 12                  451 	ld	(de),a
                            452 ; genPlus
                            453 ; genPlusIncr
   0150 11 38 00            454 	ld	de,#_skull + 0 + 56
                            455 ; genAssign (pointer)
   0153 3E AA               456 	ld	a,#0xAA
   0155 12                  457 	ld	(de),a
                            458 ; genPlus
                            459 ; genPlusIncr
   0156 11 39 00            460 	ld	de,#_skull + 0 + 57
                            461 ; genAssign (pointer)
   0159 3E 28               462 	ld	a,#0x28
   015B 12                  463 	ld	(de),a
                            464 ; genPlus
                            465 ; genPlusIncr
   015C 11 3A 00            466 	ld	de,#_skull + 0 + 58
                            467 ; genAssign (pointer)
   015F 3E 2A               468 	ld	a,#0x2A
   0161 12                  469 	ld	(de),a
                            470 ; genPlus
                            471 ; genPlusIncr
   0162 11 3B 00            472 	ld	de,#_skull + 0 + 59
                            473 ; genAssign (pointer)
   0165 3E A8               474 	ld	a,#0xA8
   0167 12                  475 	ld	(de),a
                            476 ; genPlus
                            477 ; genPlusIncr
   0168 11 3C 00            478 	ld	de,#_skull + 0 + 60
                            479 ; genAssign (pointer)
   016B 3E 44               480 	ld	a,#0x44
   016D 12                  481 	ld	(de),a
                            482 ; genPlus
                            483 ; genPlusIncr
   016E 11 3D 00            484 	ld	de,#_skull + 0 + 61
                            485 ; genAssign (pointer)
   0171 3E 00               486 	ld	a,#0x00
   0173 12                  487 	ld	(de),a
                            488 ; genPlus
                            489 ; genPlusIncr
   0174 11 3E 00            490 	ld	de,#_skull + 0 + 62
                            491 ; genAssign (pointer)
   0177 3E 38               492 	ld	a,#0x38
   0179 12                  493 	ld	(de),a
                            494 ; genPlus
                            495 ; genPlusIncr
   017A 11 3F 00            496 	ld	de,#_skull + 0 + 63
                            497 ; genAssign (pointer)
   017D 3E 00               498 	ld	a,#0x00
   017F 12                  499 	ld	(de),a
                            500 ;--------------------------------------------------------
                            501 ; Home
                            502 ;--------------------------------------------------------
                            503 	.area _HOME
                            504 	.area _CODE
                            505 ;--------------------------------------------------------
                            506 ; code
                            507 ;--------------------------------------------------------
                            508 	.area _CODE
                            509 ;	main.c 6
                            510 ; genLabel
                            511 ; genFunction
                            512 ;	---------------------------------
                            513 ; Function main
                            514 ; ---------------------------------
   0000                     515 ___main_start:
   0000                     516 _main:
   0000 C5                  517 	push	bc
   0001 E8 FF               518 	lda	sp,-1(sp)
                            519 ;	main.c 7
                            520 ; genAssign
                            521 ; AOP_STK for _main_current_sprite_index_1_1
   0003 F8 00               522 	lda	hl,0(sp)
   0005 36 00               523 	ld	(hl),#0x00
                            524 ;	main.c 10
                            525 ; genAssign
   0007 06 00               526 	ld	b,#0x00
   0009 0E 00               527 	ld	c,#0x00
                            528 ; genLabel
   000B                     529 00109$:
                            530 ; genCmpLt
   000B 58                  531 	ld	e,b
   000C 79                  532 	ld	a,c
   000D EE 80               533 	xor	a,#0x80
   000F 57                  534 	ld	d,a
   0010 21 E1 7F            535 	ld	hl,#0x7FE1
   0013 19                  536 	add	hl,de
   0014 DA 30 00            537 	jp	c,00112$
                            538 ;	main.c 11
                            539 ; genIpush
   0017 21 C8 00            540 	ld	hl,#0x00C8
   001A E5                  541 	push	hl
                            542 ; genCall
   001B CD 00 00            543 	call	_delay
   001E E8 02               544 	lda	sp,2(sp)
                            545 ;	main.c 12
                            546 ; genIpush
   0020 21 F7 00            547 	ld	hl,#__str_0 + 0
   0023 E5                  548 	push	hl
                            549 ; genCall
   0024 CD 00 00            550 	call	_printf
   0027 E8 02               551 	lda	sp,2(sp)
                            552 ;	main.c 10
                            553 ; genPlus
                            554 ; genPlusIncr
   0029 04                  555 	inc	b
   002A 20 01               556 	jr	nz,00126$
   002C 0C                  557 	inc	c
   002D                     558 00126$:
                            559 ; genGoto
   002D C3 0B 00            560 	jp	00109$
                            561 ; genLabel
   0030                     562 00112$:
                            563 ;	main.c 14
                            564 ; genAssign
   0030 06 00               565 	ld	b,#0x00
   0032 0E 00               566 	ld	c,#0x00
                            567 ; genLabel
   0034                     568 00113$:
                            569 ; genCmpLt
   0034 58                  570 	ld	e,b
   0035 79                  571 	ld	a,c
   0036 EE 80               572 	xor	a,#0x80
   0038 57                  573 	ld	d,a
   0039 21 CF 7F            574 	ld	hl,#0x7FCF
   003C 19                  575 	add	hl,de
   003D DA 50 00            576 	jp	c,00116$
                            577 ;	main.c 15
                            578 ; genIpush
   0040 21 03 01            579 	ld	hl,#__str_1 + 0
   0043 E5                  580 	push	hl
                            581 ; genCall
   0044 CD 00 00            582 	call	_printf
   0047 E8 02               583 	lda	sp,2(sp)
                            584 ;	main.c 14
                            585 ; genPlus
                            586 ; genPlusIncr
   0049 04                  587 	inc	b
   004A 20 01               588 	jr	nz,00127$
   004C 0C                  589 	inc	c
   004D                     590 00127$:
                            591 ; genGoto
   004D C3 34 00            592 	jp	00113$
                            593 ; genLabel
   0050                     594 00116$:
                            595 ;	main.c 17
                            596 ; genIpush
   0050 21 05 01            597 	ld	hl,#__str_2 + 0
   0053 E5                  598 	push	hl
                            599 ; genCall
   0054 CD 00 00            600 	call	_printf
   0057 E8 02               601 	lda	sp,2(sp)
                            602 ;	main.c 18
                            603 ; genIpush
   0059 21 0D 01            604 	ld	hl,#__str_3 + 0
   005C E5                  605 	push	hl
                            606 ; genCall
   005D CD 00 00            607 	call	_printf
   0060 E8 02               608 	lda	sp,2(sp)
                            609 ;	main.c 19
                            610 ; genIpush
   0062 21 27 01            611 	ld	hl,#__str_4 + 0
   0065 E5                  612 	push	hl
                            613 ; genCall
   0066 CD 00 00            614 	call	_printf
   0069 E8 02               615 	lda	sp,2(sp)
                            616 ;	main.c 22
                            617 ; genIpush
   006B 21 00 00            618 	ld	hl,#_skull + 0
   006E E5                  619 	push	hl
                            620 ; genIpush
   006F 3E 03               621 	ld	a,#0x03
   0071 F5                  622 	push	af
   0072 33                  623 	inc	sp
                            624 ; genIpush
   0073 3E 00               625 	ld	a,#0x00
   0075 F5                  626 	push	af
   0076 33                  627 	inc	sp
                            628 ; genCall
   0077 CD 00 00            629 	call	_set_sprite_data
   007A E8 04               630 	lda	sp,4(sp)
                            631 ;	main.c 23
                            632 ; genIpush
   007C 3E 03               633 	ld	a,#0x03
   007E F5                  634 	push	af
   007F 33                  635 	inc	sp
                            636 ; genIpush
   0080 3E 03               637 	ld	a,#0x03
   0082 F5                  638 	push	af
   0083 33                  639 	inc	sp
                            640 ; genCall
   0084 CD 00 00            641 	call	_set_sprite_tile
   0087 E8 02               642 	lda	sp,2(sp)
                            643 ;	main.c 24
                            644 ; genIpush
   0089 3E 4E               645 	ld	a,#0x4E
   008B F5                  646 	push	af
   008C 33                  647 	inc	sp
                            648 ; genIpush
   008D 3E 28               649 	ld	a,#0x28
   008F F5                  650 	push	af
   0090 33                  651 	inc	sp
                            652 ; genIpush
   0091 3E 00               653 	ld	a,#0x00
   0093 F5                  654 	push	af
   0094 33                  655 	inc	sp
                            656 ; genCall
   0095 CD 00 00            657 	call	_move_sprite
   0098 E8 03               658 	lda	sp,3(sp)
                            659 ;	main.c 25
                            660 ; genOr
                            661 ; AOP_SFR for _LCDC_REG
                            662 ; Type res[4] = l[4]&r[1]
                            663 ; Size res[1] = l[1]&r[1]
   009A F0 00               664 	ldh	a,(_LCDC_REG+0) ; x
   009C F6 02               665 	or	a,#0x02
   009E E0 00               666 	ldh	(_LCDC_REG+0),a
                            667 ;	main.c 28
                            668 ; genLabel
   00A0                     669 00107$:
                            670 ;	main.c 29
                            671 ; genCmpEq
                            672 ; AOP_STK for _main_current_sprite_index_1_1
   00A0 F8 00               673 	lda	hl,0(sp)
   00A2 7E                  674 	ld	a,(hl)
   00A3 B7                  675 	or	a,a
   00A4 C2 A9 00            676 	jp	nz,00128$
   00A7 18 03               677 	jr	00129$
   00A9                     678 00128$:
   00A9 C3 B0 00            679 	jp	00102$
   00AC                     680 00129$:
                            681 ;	main.c 30
                            682 ; genAssign
                            683 ; AOP_STK for _main_current_sprite_index_1_1
   00AC F8 00               684 	lda	hl,0(sp)
   00AE 36 01               685 	ld	(hl),#0x01
                            686 ; genLabel
   00B0                     687 00102$:
                            688 ;	main.c 32
                            689 ; genCmpEq
                            690 ; AOP_STK for _main_current_sprite_index_1_1
   00B0 F8 00               691 	lda	hl,0(sp)
   00B2 7E                  692 	ld	a,(hl) ; 2
   00B3 FE 01               693 	cp	a,#0x01
   00B5 C2 BA 00            694 	jp	nz,00130$
   00B8 18 03               695 	jr	00131$
   00BA                     696 00130$:
   00BA C3 C4 00            697 	jp	00104$
   00BD                     698 00131$:
                            699 ;	main.c 33
                            700 ; genAssign
                            701 ; AOP_STK for _main_current_sprite_index_1_1
   00BD F8 00               702 	lda	hl,0(sp)
   00BF 36 02               703 	ld	(hl),#0x02
                            704 ; genGoto
   00C1 C3 C8 00            705 	jp	00105$
                            706 ; genLabel
   00C4                     707 00104$:
                            708 ;	main.c 39
                            709 ; genAssign
                            710 ; AOP_STK for _main_current_sprite_index_1_1
   00C4 F8 00               711 	lda	hl,0(sp)
   00C6 36 00               712 	ld	(hl),#0x00
                            713 ; genLabel
   00C8                     714 00105$:
                            715 ;	main.c 41
                            716 ; genIpush
                            717 ; AOP_STK for _main_current_sprite_index_1_1
   00C8 F8 00               718 	lda	hl,0(sp)
   00CA 7E                  719 	ld	a,(hl)
   00CB F5                  720 	push	af
   00CC 33                  721 	inc	sp
                            722 ; genIpush
   00CD 3E 00               723 	ld	a,#0x00
   00CF F5                  724 	push	af
   00D0 33                  725 	inc	sp
                            726 ; genCall
   00D1 CD 00 00            727 	call	_set_sprite_tile
   00D4 E8 02               728 	lda	sp,2(sp)
                            729 ;	main.c 42
                            730 ; genIpush
   00D6 21 64 00            731 	ld	hl,#0x0064
   00D9 E5                  732 	push	hl
                            733 ; genCall
   00DA CD 00 00            734 	call	_delay
   00DD E8 02               735 	lda	sp,2(sp)
                            736 ;	main.c 43
                            737 ; genIpush
   00DF 3E 01               738 	ld	a,#0x01
   00E1 F5                  739 	push	af
   00E2 33                  740 	inc	sp
                            741 ; genIpush
   00E3 3E 02               742 	ld	a,#0x02
   00E5 F5                  743 	push	af
   00E6 33                  744 	inc	sp
                            745 ; genIpush
   00E7 3E 00               746 	ld	a,#0x00
   00E9 F5                  747 	push	af
   00EA 33                  748 	inc	sp
                            749 ; genCall
   00EB CD 00 00            750 	call	_scroll_sprite
   00EE E8 03               751 	lda	sp,3(sp)
                            752 ; genGoto
   00F0 C3 A0 00            753 	jp	00107$
                            754 ; genLabel
   00F3                     755 00117$:
                            756 ; genEndFunction
   00F3 E8 01               757 	lda	sp,1(sp)
   00F5 C1                  758 	pop	bc
   00F6 C9                  759 	ret
   00F7                     760 ___main_end:
   00F7                     761 __str_0:
   00F7 20 72 61 72 6F 7E   762 	.ascii " raro~Soft "
        53 6F 66 74 20
   0102 00                  763 	.db 0x00
   0103                     764 __str_1:
   0103 0A                  765 	.db 0x0A
   0104 00                  766 	.db 0x00
   0105                     767 __str_2:
   0105 0A                  768 	.db 0x0A
   0106 0A                  769 	.db 0x0A
   0107 0A                  770 	.db 0x0A
   0108 0A                  771 	.db 0x0A
   0109 0A                  772 	.db 0x0A
   010A 0A                  773 	.db 0x0A
   010B 0A                  774 	.db 0x0A
   010C 00                  775 	.db 0x00
   010D                     776 __str_3:
   010D 20 20 53 6B 75 6C   777 	.ascii "  Skully~Demo_v1.0"
        6C 79 7E 44 65 6D
        6F 5F 76 31 2E 30
   011F 0A                  778 	.db 0x0A
   0120 0A                  779 	.db 0x0A
   0121 0A                  780 	.db 0x0A
   0122 0A                  781 	.db 0x0A
   0123 0A                  782 	.db 0x0A
   0124 0A                  783 	.db 0x0A
   0125 0A                  784 	.db 0x0A
   0126 00                  785 	.db 0x00
   0127                     786 __str_4:
   0127 4D 61 64 65 20 62   787 	.ascii "Made by             Eduardo Reyes "
        79 20 20 20 20 20
        20 20 20 20 20 20
        20 20 45 64 75 61
        72 64 6F 20 52 65
        79 65 73 20
   0149 00                  788 	.db 0x00
                            789 	.area _CODE
ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 1.

Symbol Table

    _BCPD_REG                          **** GX
    _BCPS_REG                          **** GX
    _BGP_REG                           **** GX
    _DIV_REG                           **** GX
    _DMA_REG                           **** GX
    _HDMA1_REG                         **** GX
    _HDMA2_REG                         **** GX
    _HDMA3_REG                         **** GX
    _HDMA4_REG                         **** GX
    _HDMA5_REG                         **** GX
    _IE_REG                            **** GX
    _IF_REG                            **** GX
    _KEY1_REG                          **** GX
    _LCDC_REG                          **** GX
    _LYC_REG                           **** GX
    _LY_REG                            **** GX
    _NR10_REG                          **** GX
    _NR11_REG                          **** GX
    _NR12_REG                          **** GX
    _NR13_REG                          **** GX
    _NR14_REG                          **** GX
    _NR21_REG                          **** GX
    _NR22_REG                          **** GX
    _NR23_REG                          **** GX
    _NR24_REG                          **** GX
    _NR30_REG                          **** GX
    _NR31_REG                          **** GX
    _NR32_REG                          **** GX
    _NR33_REG                          **** GX
    _NR34_REG                          **** GX
    _NR41_REG                          **** GX
    _NR42_REG                          **** GX
    _NR43_REG                          **** GX
    _NR44_REG                          **** GX
    _NR50_REG                          **** GX
    _NR51_REG                          **** GX
    _NR52_REG                          **** GX
    _OBP0_REG                          **** GX
    _OBP1_REG                          **** GX
    _OCPD_REG                          **** GX
    _OCPS_REG                          **** GX
    _P1_REG                            **** GX
    _RP_REG                            **** GX
    _SB_REG                            **** GX
    _SCX_REG                           **** GX
    _SCY_REG                           **** GX
    _SC_REG                            **** GX
    _STAT_REG                          **** GX
    _SVBK_REG                          **** GX
    _TAC_REG                           **** GX
    _TIMA_REG                          **** GX
    _TMA_REG                           **** GX
    _VBK_REG                           **** GX
    _WX_REG                            **** GX
    _WY_REG                            **** GX
  0 ___main_end                        00F7 R
  0 ___main_start                      0000 R
    __cpu                              **** GX
    __io_in                            **** GX
    __io_out                           **** GX
    __io_status                        **** GX
  0 __str_0                            00F7 R
  0 __str_1                            0103 R
  0 __str_2                            0105 R
  0 __str_3                            010D R
  0 __str_4                            0127 R
    _delay                             **** GX
  0 _main                              0000 GR
    _move_sprite                       **** GX
    _printf                            **** GX
    _scroll_sprite                     **** GX
    _set_sprite_data                   **** GX
    _set_sprite_tile                   **** GX
  1 _skull                             0000 GR
    _sys_time                          **** GX

ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 2.

Area Table

   0 _CODE                              size  14A   flags 0
   1 _DATA                              size   40   flags 0
   2 _OVERLAY                           size    0   flags 0
   3 _ISEG                              size    0   flags 0
   4 _BSEG                              size    0   flags 0
   5 _XSEG                              size    0   flags 0
   6 _GSINIT                            size  180   flags 0
   7 _GSFINAL                           size    0   flags 0
   8 _HOME                              size    0   flags 0
